###https://github.com/anjaanabishek10

#####IMPORT#####
####################################################################################################################################################

require 'uri'
require 'net/http'

####################################################################################################################################################

#####COMMAND LINE ARUG#####
####################################################################################################################################################

flag, $input, *$waste = ARGV

####################################################################################################################################################

#####HTTP SESSION#####
####################################################################################################################################################

$uri = URI.parse("https://www.instagram.com/accounts/account_recovery_send_ajax/")
$http = Net::HTTP.new($uri.host, $uri.port)
$http.use_ssl = true

$request = Net::HTTP::Post.new($uri.request_uri)
$request["user-agent"] = "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.122 Safari/537.36"
$request["X-CSRFToken"] = "missing"

####################################################################################################################################################

#####BANNER#####
####################################################################################################################################################

def banner()

    system('clear')

    puts "\033[1;31m██\033[1;37m╗\033[1;31m███\033[1;37m╗   \033[1;31m██\033[1;37m╗\033[1;31m███████\033[1;37m╗\033[1;31m████████\033[1;37m╗ \033[1;31m█████\033[1;37m╗  \033[1;31m██████\033[1;37m╗\033[1;31m██\033[1;37m╗  \033[1;31m██\033[1;37m╗\033[1;31m███████\033[1;37m╗ \033[1;31m██████\033[1;37m╗\033[1;31m██\033[1;37m╗  \033[1;31m██\033[1;37m╗"
    puts "\033[1;31m██\033[1;37m║\033[1;31m████\033[1;37m╗  \033[1;31m██\033[1;37m║\033[1;31m██\033[1;37m╔════╝╚══\033[1;31m██\033[1;37m╔══╝\033[1;31m██\033[1;37m╔══\033[1;31m██\033[1;37m╗\033[1;31m██\033[1;37m╔════╝\033[1;31m██\033[1;37m║  \033[1;31m██\033[1;37m║\033[1;31m██\033[1;37m╔════╝\033[1;31m██\033[1;37m╔════╝\033[1;31m██\033[1;37m║ \033[1;31m██\033[1;37m╔╝"
    puts "\033[1;31m██\033[1;37m║\033[1;31m██\033[1;37m╔\033[1;31m██\033[1;37m╗ \033[1;31m██\033[1;37m║\033[1;31m███████\033[1;37m╗   \033[1;31m██\033[1;37m║   \033[1;31m███████\033[1;37m║\033[1;31m██\033[1;37m║     \033[1;31m███████\033[1;37m║\033[1;31m█████\033[1;37m╗  \033[1;31m██\033[1;37m║     \033[1;31m█████\033[1;37m╔╝"
    puts "\033[1;31m██\033[1;37m║\033[1;31m██\033[1;37m║╚\033[1;31m██\033[1;37m╗\033[1;31m██\033[1;37m║╚════\033[1;31m██\033[1;37m║   \033[1;31m██\033[1;37m║   \033[1;31m██\033[1;37m╔══\033[1;31m██\033[1;37m║\033[1;31m██\033[1;37m║     \033[1;31m██\033[1;37m╔══\033[1;31m██\033[1;37m║\033[1;31m██\033[1;37m╔══╝  \033[1;31m██\033[1;37m║     \033[1;31m██\033[1;37m╔═\033[1;31m██\033[1;37m╗"
    puts "\033[1;31m██\033[1;37m║\033[1;31m██\033[1;37m║ ╚\033[1;31m████\033[1;37m║\033[1;31m███████\033[1;37m║   \033[1;31m██\033[1;37m║   \033[1;31m██\033[1;37m║  \033[1;31m██\033[1;37m║╚\033[1;31m██████\033[1;37m╗\033[1;31m██\033[1;37m║  \033[1;31m██\033[1;37m║\033[1;31m███████\033[1;37m╗╚\033[1;31m██████\033[1;37m╗\033[1;31m██\033[1;37m║  \033[1;31m██\033[1;37m╗"
    puts "\033[1;37m╚═╝╚═╝  ╚═══╝╚══════╝   ╚═╝   ╚═╝  ╚═╝ ╚═════╝╚═╝  ╚═╝╚══════╝ ╚═════╝╚═╝  ╚═╝"
    puts "\033[1;31mhttps://github.com/anjaanabishek10                  \033[1;31m+-+-+-+-+-+-+-+-+-+-+-+-+-+"
    puts "                                                    \033[1;31m|\033[1;37mU\033[1;31m|\033[1;37mn\033[1;31m|\033[1;37m5\033[1;31m|\033[1;37me\033[1;31m|\033[1;37me\033[1;31m|\033[1;37mN\033[1;31m|\033[1;37m3\033[1;31m|\033[1;37mx\033[1;31m|\033[1;37mP\033[1;31m|\033[1;37m1\033[1;31m|\033[1;37m0\033[1;31m|\033[1;37mI\033[1;31m|\033[1;37mT\033[1;31m|"
    puts "                                                    \033[1;31m+-+-+-+-+-+-+-+-+-+-+-+-+-+"
    puts ""

    puts "\033[1;31m# \033[1;37mDISCORD  :   anjaanabishek#6186                               \033[1;31m#"
    puts "\033[1;31m# \033[1;37mGMAIL    :   anjaanabishek10@gmail.com                        \033[1;31m#"
    puts "\033[1;31m# \033[1;37mINSTA    :   https://www.instagram.com/anjaan.abishek/        \033[1;31m#"
    puts "\033[1;31m# \033[1;37mLINKEDIN :   https://www.linkedin.com/in/abishek-k-11217b1b5/ \033[1;31m#"
    puts ""

end

####################################################################################################################################################

#####HELP#####
####################################################################################################################################################

def help()

    puts "\033[1;31mUSAGE:"
    puts "\033[1;37mruby instacheck.rb flag number(mail)"
    puts ""

    puts "\033[1;31mFLAG:"
    puts "\033[1;37m-h or --help     => show the help menu"
    puts "\033[1;37m-s or --single   => accept single mail id or phone number"
    puts "\033[1;37m-m or --multi    => accept multiple mobile number and mail id"
    puts ""

    puts "\033[1;31mEXAMPLE:"
    puts "\033[1;37mruby instacheck.rb -h"
    puts "\033[1;37mruby instacheck.rb -s 8469812759"
    puts "\033[1;37mruby instacheck.rb -m 8469812759 example@gmail.com"
    puts ""

end

####################################################################################################################################################

#####SINGLE#####
####################################################################################################################################################

def single()

    begin

        $request.set_form_data({"email_or_username" => $input})
        response = $http.request($request)

        if ((response.body =~ /sent/) || (response.body =~ /password/))

            puts "\033[1;37m#{$input} => \033[1;32mValid"
            puts ""

        else

            puts "\033[1;37m#{$input} => \033[1;31mInValid"
            puts ""

        end

    rescue SocketError => e

        puts "\033[1;31m!!!\033[1;37mProgram Stopped due to some Error\033[1;31m!!!"
        puts "\033[1;31mNetwork Problem:"
        puts "\033[1;37mCheck your Internet Connection"
        puts ""

    rescue Errno::ENETUNREACH => e

        puts "\033[1;31m!!!\033[1;37mProgram Stopped due to some Error\033[1;31m!!!"
        puts "\033[1;31mNetwork Problem:"
        puts "\033[1;37mCheck your Internet Connection"
        puts ""

    end

end

####################################################################################################################################################

#####MULTI#####
####################################################################################################################################################

def multi()

    $waste[$waste&.size] = $input

    for arg in $waste

        begin

            $request.set_form_data({"email_or_username" => arg})
            response = $http.request($request)

            if ((response.body =~ /sent/) || (response.body =~ /password/))

                puts "\033[1;37m#{arg} => \033[1;32mValid"
                puts ""

            else

                puts "\033[1;37m#{arg} => \033[1;31mInValid"
                puts ""

            end

        rescue SocketError => e

            puts "\033[1;31m!!!\033[1;37mProgram Stopped due to some Error\033[1;31m!!!"
            puts "\033[1;31mNetwork Problem:"
            puts "\033[1;37mCheck your Internet Connection"
            puts ""

            break

        rescue Errno::ENETUNREACH => e

            puts "\033[1;31m!!!\033[1;37mProgram Stopped due to some Error\033[1;31m!!!"
            puts "\033[1;31mNetwork Problem:"
            puts "\033[1;37mCheck your Internet Connection"
            puts ""

            break

        end

    end

end

####################################################################################################################################################

#####START#####
####################################################################################################################################################

if(((flag == '-h') || (flag == '--help')) && (($input&.size == nil) || ($input&.size == 0)))

    banner()
    help()

elsif(((flag == '-s') || (flag == '--single')) && (($input&.size != 0) && ($input&.size != nil)) && (($waste&.size == nil) || ($waste&.size == 0)))

    banner()
    single()

elsif(((flag == '-m') || (flag == '--multi')) && (($input&.size != 0) && ($input&.size != nil)) && (($waste&.size != nil) && ($waste&.size != 0)))

    banner()
    multi()

else

    banner()
    help()

end

####################################################################################################################################################